/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Tweeter, TweeterInterface } from "../Tweeter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Tweeted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "tweet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweets",
    outputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e8d857b01461003b578063fb46d4c51461006d575b600080fd5b610055600480360381019061005091906103cf565b610089565b604051610064939291906104e5565b60405180910390f35b61008760048036038101906100829190610588565b61015b565b005b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546100d890610604565b80601f016020809104026020016040519081016040528092919081815260200182805461010490610604565b80156101515780601f1061012657610100808354040283529160200191610151565b820191906000526020600020905b81548152906001019060200180831161013457829003601f168201915b5050505050905083565b61016560006102c8565b60405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250600160006101e860006102de565b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102639291906102ec565b509050503373ffffffffffffffffffffffffffffffffffffffff167f29135ede013716350a450338aa2156426031185db9aa059565ea2db3aa536b556102a960006102de565b4285856040516102bc9493929190610672565b60405180910390a25050565b6001816000016000828254019250508190555050565b600081600001549050919050565b8280546102f890610604565b90600052602060002090601f01602090048101928261031a5760008555610361565b82601f1061033357805160ff1916838001178555610361565b82800160010185558215610361579182015b82811115610360578251825591602001919060010190610345565b5b50905061036e9190610372565b5090565b5b8082111561038b576000816000905550600101610373565b5090565b600080fd5b600080fd5b6000819050919050565b6103ac81610399565b81146103b757600080fd5b50565b6000813590506103c9816103a3565b92915050565b6000602082840312156103e5576103e461038f565b5b60006103f3848285016103ba565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610427826103fc565b9050919050565b6104378161041c565b82525050565b61044681610399565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561048657808201518184015260208101905061046b565b83811115610495576000848401525b50505050565b6000601f19601f8301169050919050565b60006104b78261044c565b6104c18185610457565b93506104d1818560208601610468565b6104da8161049b565b840191505092915050565b60006060820190506104fa600083018661042e565b610507602083018561043d565b818103604083015261051981846104ac565b9050949350505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261054857610547610523565b5b8235905067ffffffffffffffff81111561056557610564610528565b5b6020830191508360018202830111156105815761058061052d565b5b9250929050565b6000806020838503121561059f5761059e61038f565b5b600083013567ffffffffffffffff8111156105bd576105bc610394565b5b6105c985828601610532565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061061c57607f821691505b602082108114156106305761062f6105d5565b5b50919050565b82818337600083830152505050565b60006106518385610457565b935061065e838584610636565b6106678361049b565b840190509392505050565b6000606082019050610687600083018761043d565b610694602083018661043d565b81810360408301526106a7818486610645565b90509594505050505056fea26469706673582212204188d7ab6b1732bea9a723233c81b33e36a15d6aa963fcf9360cf40ae403f4d364736f6c63430008090033";

type TweeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TweeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tweeter__factory extends ContractFactory {
  constructor(...args: TweeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Tweeter> {
    return super.deploy(overrides || {}) as Promise<Tweeter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Tweeter {
    return super.attach(address) as Tweeter;
  }
  connect(signer: Signer): Tweeter__factory {
    return super.connect(signer) as Tweeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TweeterInterface {
    return new utils.Interface(_abi) as TweeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tweeter {
    return new Contract(address, _abi, signerOrProvider) as Tweeter;
  }
}
